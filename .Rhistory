highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series(labels = test$Certificate)
test %>%
tally(Certificate)
test %>%
tally(Certificate)
test
test %>%
summarise(Certificate)
aggregate(test$Certificate)
test %>%
group_by(Certificate)
test %>%
group_by(Certificate) %>%
tally()
test %>%
group_by(Certificate) %>%
tally() %>%
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series(labels = test$Certificate)
test %>%
group_by(Certificate) %>%
tally() %>%
highchart() %>%
hc_chart(type = "pie")
test %>%
group_by(Certificate) %>%
tally() %>%
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series()
test %>%
group_by(Certificate) %>%
tally()
test %>%
group_by(Certificate) %>%
tally() %>%
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series(labels = "Certificate", values = "n")
test %>%
group_by(Certificate) %>%
tally() %>%
highchart() %>%
hc_chart(type = "pie")
?highchart
?highcharter
test %>%
group_by(Certificate) %>%
tally() %>%
highchart() %>%
hc_chart(type = "bar")
test %>%
group_by(Certificate) %>%
tally() %>%
highchart() %>%
hc_chart(type = "bar", hcaes(x = Certificate, y = n))
test %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "bar", hcaes(x = Certificate, y = n))
test %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n))
test %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title("Percentage of Movie Ratings")
?hc_title
style = list(color = "#90ed7d", useHTML = TRUE)
test %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "This is a title with <i>margin</i> and <b>Strong or bold text</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE))
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "This is a title with <i>margin</i> and <b>Strong or bold text</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE))
clrs <- c("red", "yellow", "blue", "green", "orange")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE)) %>%
hc_colors(clrs)
clrs <- c("#0D4D4D", "#0D4D4D", "#805C15", "#804515", "#351456")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE)) %>%
hc_colors(clrs)
clrs <- c("#7E9F35", "#7E9F35", "#A7383D", "#862D63", "#2D5073")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE)) %>%
hc_colors(clrs)
clrs <- c("#7E9F35", "#B1B13D", "#A7383D", "#862D63", "#2D5073")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE)) %>%
hc_colors(clrs)
clrs <- c("#E45402", "#E48D02", "#0E4B95", "#02966D", "#1919A0")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE)) %>%
hc_colors(clrs)
clrs <- c("#E45402", "#E48D02", "#0E4B95", "#02966D", "#B70268")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE)) %>%
hc_colors(clrs)
clrs <- c("#E45402", "#E48D02", "#0E4B95", "#B70268", "E40202")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE)) %>%
hc_colors(clrs)
clrs <- c("#E45402", "#E48D02", "#0E4B95", "#02966D", "#B70268")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "#90ed7d", useHTML = TRUE)) %>%
hc_colors(clrs)
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs)
MovieRatings.pie <- cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs)
runApp()
library(shiny)
library(tidyverse)
library(rvest)
library(dplyr)
library(knitr)
library(kableExtra)
library(highcharter)
ui <- fluidPage(
# Application title
titlePanel("Top 50 IMDB Movies by User Rating"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(width = 1,
checkboxGroupInput(inputId = "choicefilter",
label = "Select Movie Genre(s)", inline = FALSE,
choices = sort(c("Drama", "Comedy", "Action", "Sci-Fi",
"Fantasy", "Western", "Biography",
"Music", "Mystery", "Thriller", "War",
"Animation", "Family", "History")),
)
),
fluidRow(
column(4,
tableOutput("movietablet")# Total movie table
),
column(4,
tableOutput("movietablef")  # Filtered movie table
)
)
),
fluidRow(column(width = 6, highchartOutput("moviepie", height = "500px"))),
fluidRow(column(width = 2,textOutput("InfoBox"))),
)
server <- function(input, output) {
source("top_movies.R") # Load all of the variables from the top_movies.r file
# Create the movie_table from the variables declared in source()
movie_table <- data.frame(
Rank = seq(1, length(year), 1),
Ratings = ratings,
Titles = titles,
Year = year,
Runtime = runtimes,
Genre = genre,
Certificate = Certificate)
movie_table_t <- movie_table %>%
mutate(
Ratings = cell_spec(x = Ratings, format = "html", bold = T, color = "white", background = ifelse(Ratings > mean(Ratings), "green", "blue"))
) %>%
kable(escape = F) %>% # NOTE must have "escape = F" for HTML to render
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F)
# Create a table that is reactive based on OR conditions for the 3 filter genre inputs
movie_table_f <- reactive({
validate(
need(input$choicefilter != "", "Please select a movie genre")
)
# Apply filters here
movie_table_f <- movie_table %>% filter(grepl(paste(input$choicefilter, collapse = "|"), Genre))
#movie_table_f <- movie_table %>% filter(Genre %in% input$choicefilter)
# movie_table_f <- movie_table %>% filter(grepl(input$Filters1, Genre) |
#                                             grepl(input$Filters2, Genre)|
#                                             grepl(input$Filters3, Genre))
# Feed the movie table through kableExtra to produce pretty output
movie_table_f <- movie_table_f %>%
mutate(
Ratings = cell_spec(x = Ratings, format = "html", bold = T, color = "white", background = ifelse(Ratings > mean(Ratings), "green", "blue"))
) %>%
kable(escape = F) %>% # NOTE must have "escape = F" for HTML to render
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F)
})
# Output for total movietable
output$movietablet <- function(){
movie_table_t %>%
scroll_box(width = "550px", height = "400px")
}
# Output for filtered movie_table_f
output$movietablef <- function(){
movie_table_f() %>%
scroll_box(width = "550px", height = "400px")
}
output$InfoBox <- renderText({
"This application scrapes web data from IMDB's top 250 movies by user
ratings."
})
output$moviepie <- renderHighchart({
# Pie Chart Construction================================================
clrs <- c("#E45402", "#E48D02", "#0E4B95", "#02966D", "#B70268")
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs)
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
cbind.data.frame(titles, Certificate) %>%
group_by(Certificate) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Ratings Percentages</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs)
runApp()
runApp()
spread(genre)
genre
genre %>%
tally()
cbind.data.frame(titles, genre)
cbind.data.frame(titles, genre) %>%
group_by(genre) %>%
tally()
test <- cbind.data.frame(titles, genre)
spread(test$genre)
spread(test$genre[1])
split(test$genre[1])
split(test$genre[1], f = ",")
split(test$genre, f = ",")
test
split(test$genre, f = ",")
split(test$genre, sep =  ",")
split(test$genre, sep =  ",", f = ",")
split(test$genre[2], f = ",")
unlist(strsplit(test$genre, ",")
unlist(strsplit(test$genre, ","))
strsplit(test$genre, ",")
test$genre
test <- cbind.data.frame(titles, genre)
unlist(strsplit(test$genre, ","))
test
test$genre
strsplit(test$genre, ",")
unlist(strsplit(as.character(test$genre), ","))
unlist(strsplit(as.character(genre), ","))
unlist(strsplit(as.character(genre), ",")) %>%
tally()
genrepie.df <- data.frame(unlist(strsplit(as.character(genre), ",")))
genrepie.df
colnames(genrepie.df) <- c("genres")
enrepie.df %>%
group_by(genres)
tally()
genrepie.df %>%
group_by(genres)
tally()
genrepie.df %>%
group_by(genres) %>%
tally()
library(viridisLite)
clrs2 <- viridis(n = nrow(genrepie.df))
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = Certificate, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs2)
genrepie.df
genrepie.df %>%
group_by(genres) %>%
tally()
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs2)
MovieGenres.pie
genrepie.df <- data.frame(unlist(strsplit(as.character(genre), " ,")))
colnames(genrepie.df) <- c("genres")
clrs2 <- viridis(n = nrow(genrepie.df))
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs2)
MovieGenres.pie
genrepie.df <- data.frame(unlist(strsplit(as.character(genre))))
colnames(genrepie.df) <- c("genres")
clrs2 <- viridis(n = nrow(genrepie.df))
genrepie.df
genrepie.df <- data.frame(unlist(strsplit(as.character(genre), ",")))
colnames(genrepie.df) <- c("genres")
clrs2 <- viridis(n = nrow(genrepie.df))
genrepie.df
genrepie.df %>%
group_by(genres) %>%
tally()
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs2)
MovieGenres.pie
MovieGenres.pie <-  genrepie.df %>%
#group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs2)
MovieGenres.pie
genrepie.df %>%
group_by(genres) %>%
tally()
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE))
MovieGenres.pie
View(genrepie.df %>%
group_by(genres) %>%
tally())
genrepie.df <- data.frame(unlist(strsplit(as.character(genre), ",")))
colnames(genrepie.df) <- c("genres")
genrepie.df <- trimws(genrepie.df$genres, which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
clrs2 <- viridis(n = nrow(genrepie.df))
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE))
MovieGenres.pie
genrepie.df
genrepie.df <- data.frame(unlist(strsplit(as.character(genre), ",")))
colnames(genrepie.df) <- c("genres")
genrepie.df$genres <- trimws(genrepie.df$genres, which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
clrs2 <- viridis(n = nrow(genrepie.df))
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE))
MovieGenres.pie
unique(genrepie.df$genres)
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs2)
MovieGenres.pie
nrow(genrepie.df)
clrs2 <- viridis(n = unique(genrepie.df$genres))
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs2)
MovieGenres.pie
clrs2 <- viridis(n = unique(genrepie.df$genres))
clrs2 <- viridis(n = length(unique(genrepie.df$genres)))
MovieGenres.pie <-  genrepie.df %>%
group_by(genres) %>%
tally() %>%
hchart(type = "pie", hcaes(x = genres, y = n)) %>%
hc_title(text = "<b>Movie Genres</b>",
margin = 20, align = "left",
style = list(color = "##000000", useHTML = TRUE)) %>%
hc_colors(clrs2)
MovieGenres.pie
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unique(genrepie.df$genres)
runApp()
shiny::runApp()
Certificate
webpage %>%
html_nodes(".certificate") %>%
html_text()
library(shiny)
library(tidyverse)
library(rvest)
library(knitr)
library(kableExtra)
library(highcharter)
library(viridisLite)
webpage %>%
html_nodes(".certificate") %>%
html_text()
# First establish the URL we want to scape data from, in this IMDB
url <- "https://www.imdb.com/search/title/?groups=top_250&sort=user_rating,desc"
webpage <- read_html(url)
Certificate <- webpage %>%
html_nodes(".certificate") %>%
html_text() %>%
stringr::str_squish()
webpage %>%
html_nodes(".certificate") %>%
html_text()
webpage %>%
html_nodes(".certificate") %>%
html_text() %>%
stringr::str_squish()
webpage %>%
html_nodes(".genre") %>%
html_text()
webpage %>%
html_nodes(".genre") %>%
html_text() %>%
stringr::str_squish()
?trimws
